# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

AWSTemplateFormatVersion: "2010-09-09"
Description: This template setups up an Amazon SageMaker notebook to use for the OpenSearch SageMaker multilingual Demo_CloudTrail
Resources:
  # Create the s3 Bucket to store your CloudTrail logs in.
  SageMakerModelsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub '${AWS::Region}-${AWS::AccountId}-opensearch-sagemaker-demo-models'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: 'aws:kms'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      ObjectLockEnabled: false

  # Bucket policy to only allow TLS connections.
  CloudTrailBucketPolicy:
    DependsOn: 
      - SageMakerModelsBucket
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref SageMakerModelsBucket
      PolicyDocument: 
        Statement:
          - Action: 's3:*'
            Effect: Deny
            Resource: 
              - !Sub arn:${AWS::Partition}:s3:::${SageMakerModelsBucket}
              - !Sub arn:${AWS::Partition}:s3:::${SageMakerModelsBucket}/*
            Principal: '*'
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  SageMakerExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::Region}-${AWS::AccountId}-SageMaker-Execution-demo-role'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /

      # The managed policy to allow the EC2 access to SSM permissions
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSageMakerCanvasAIServicesAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerCanvasFullAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess

      # Policy to allow the EC2 to push files to the S3 bucket created. 
      Policies:
        - PolicyName: !Sub '${AWS::Region}-${AWS::AccountId}-SageMaker-Execution-demo-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:s3:::${SageMakerModelsBucket}/*'
                  - !Sub 'arn:${AWS::Partition}:s3:::${SageMakerModelsBucket}/'
              - Effect: Allow
                Action:
                  - 'es:CreateDomain'
                  - 'es:DescribeDomain'
                  - 'es:DeleteDomain'
                  - 'es:ESHttpPost'
                  - 'es:ESHttpPut'
                  - 'es:CreateElasticsearchDomain'
                  - 'es:DescribeDomainHealth'
                Resource:
                  !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'

SageMakerOpenSearchRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::Region}-${AWS::AccountId}-SageMaker-OpenSearch-demo-role'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - opensearchservice.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub '${AWS::Region}-${AWS::AccountId}-SageMaker-OpenSearch-demo-policy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'sagemaker:InvokeEndpointAsync'
                  - 'sagemaker:InvokeEndpoint'
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint/*'

  SageMakerNotebook:
    Type: AWS::SageMaker::NotebookInstance
    DependsOn: 
        - SageMakerExecutionRole
    Properties:
      NotebookInstanceName: !Sub '${AWS::Region}-${AWS::AccountId}-SageMaker-Execution-demo-notebook'
      DefaultCodeRepository: 'https://github.com/jtrollin/opensearch_sagemaker_multilingual'
      InstanceType: 'ml.m5.xlarge'
      RoleArn: !GetAtt SageMakerExecutionRole.Arn

Outputs:
  S3BucketName:
    Description: S3 Bucket Name
    Value: !Ref SageMakerModelsBucket

  SageMakerExecutionRoleArn:
    Description: SageMaker Execution Role Arn
    Value: !GetAtt SageMakerExecutionRole.Arn

  SageMakerOpenSearchRoleName:
    Description: SageMaker OpenSearch Role Arn
    Value: !GetAtt SageMakerExecutionRole.Arn
